name: PHP Tests
on: pull_request

env:
  APP_NAME: twofactor_admin

jobs:
  test-php:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.1']
        databases: ['sqlite']
        nextcloud-versions: ['stable27']
        include:
          - php-versions: '8.1'
            nextcloud-versions: 'stable25'
            databases: 'sqlite'
          - php-versions: '8.1'
            nextcloud-versions: 'stable26'
            databases: 'sqlite'
    name: php${{ matrix.php-versions }}-${{ matrix.databases }} on ${{ matrix.nextcloud-versions }}
    steps:
      - name: Set up Nextcloud env
        uses: ChristophWurst/setup-nextcloud@8bc31fe189b3cb3b44122dede08ce39e8932c554 # v0.3.1
        with:
          nextcloud-version: ${{ matrix.nextcloud-versions }}
          php-version: ${{ matrix.php-versions }}
          install: true
      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: nextcloud/apps/${{ env.APP_NAME }}
      - name: Install PHP dependencies
        working-directory: nextcloud/apps/${{ env.APP_NAME }}
        run: composer i
      - name: Install app
        run: php -f nextcloud/occ app:enable ${{ env.APP_NAME }}
      - name: PHPUnit
        working-directory: nextcloud/apps/${{ env.APP_NAME }}
        run: composer run test

  test-php-mysql:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        php-versions: ['8.1']
        databases: ['mysql']
        nextcloud-versions: ['stable27']
        include:
          - php-versions: '8.0'
            nextcloud-versions: 'stable25'
            databases: 'mysql'
          - php-versions: '8.1'
            nextcloud-versions: 'stable26'
            databases: 'mysql'
    name: php${{ matrix.php-versions }}-${{ matrix.databases }} on ${{ matrix.nextcloud-versions }}
    services:
      mysql:
        image: mariadb:10.6
        ports:
          - 4444:3306/tcp
        env:
          MYSQL_ROOT_PASSWORD: rootpassword
        options: --health-cmd="mysqladmin ping" --health-interval 5s --health-timeout 2s --health-retries 5
    steps:
      - name: Checkout server
        uses: actions/checkout@v2
        with:
          repository: nextcloud/server
          ref: ${{ matrix.nextcloud-versions }}
      - name: Checkout submodules
        shell: bash
        run: |
          auth_header="$(git config --local --get http.https://github.com/.extraheader)"
          git submodule sync --recursive
          git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
      - name: Checkout app
        uses: actions/checkout@v2
        with:
          path: apps/${{ env.APP_NAME }}
      - name: Set up php${{ matrix.php-versions }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          extensions: mbstring, iconv, gd, fileinfo, intl, mysql, pdo_mysql
          tools: phpunit:9.5
          coverage: none
      - name: Install PHP dependencies
        working-directory: apps/${{ env.APP_NAME }}
        run: composer i
      - name: Set up Nextcloud
        env:
          DB_PORT: 4444
        run: |
          ./occ maintenance:install --verbose --database=${{ matrix.databases }} --database-name=nextcloud --database-host=127.0.0.1 --database-port=$DB_PORT --database-user=root --database-pass=rootpassword --admin-user admin --admin-pass password
          php -f index.php
          ./occ app:enable ${{ env.APP_NAME }}
      - name: PHPUnit
        working-directory: apps/${{ env.APP_NAME }}
        run: composer run test

  frontend-build-test:
    runs-on: ubuntu-latest
    name: Frontend build tests
    steps:
      - uses: actions/checkout@v3
      - name: Read package.json node and npm engines version
        uses: skjnldsv/read-package-engines-version-actions@v1.2
        id: versions
        with:
          fallbackNode: '^16'
          fallbackNpm: '^8'
      - name: Set up node ${{ steps.versions.outputs.nodeVersion }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ steps.versions.outputs.nodeVersion }}
      - name: Set up npm ${{ steps.versions.outputs.npmVersion }}
        run: npm i -g npm@"${{ steps.versions.outputs.npmVersion }}"
      - name: npm ci
        run: npm ci
      - name: npm build
        run: npm run build
    env:
      CI: true

  summary:
    runs-on: ubuntu-latest
    needs:
      - test-php
      - test-php-mysql
      - frontend-build-test
    if: always()
    name: test-summary
    steps:
      - name: Unit test status
        run: if ${{ needs.test-php.result != 'success' && needs.unit-tests.result != 'skipped' }}; then exit 1; fi
      - name: MySQL tests status
        run: if ${{ needs.test-php-mysql.result != 'success' && needs.test-php-mysql.result != 'skipped' }}; then exit 1; fi
      - name: Frontend build test status
        run: if ${{ needs.frontend-build-test.result != 'success' && needs.frontend-build-test.result != 'skipped' }}; then exit 1; fi
